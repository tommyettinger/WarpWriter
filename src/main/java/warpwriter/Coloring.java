package warpwriter;

/**
 * Created by Tommy Ettinger on 11/4/2017.
 */
public class Coloring {
    // values with special meanings
    /** Empty space with nothing in it. */
    public static final byte EMPTY = 0,
    /** Used for shadows on the ground, only if nothing is at that space; does not produce outlines. */ SHADOW = 1,
    /** A solid black outline drawn around the perimeter of a 2D image; never used in 3D. */ OUTLINE = 2,
    /** A solid object that is transparent, so it will have an outline but no color of its own. */ CLEAR = 3;
    // 4, 5, 6, and 7 are reserved for later use.
    // all other bytes are organized so the bottom 3 bits determine shading, from darkest at 0 to lightest at 7, while
    // the top 5 bits are palette-dependent and are used to determine the precise hue and saturation.

    public static final int[] CW_PALETTE = {
            0x00000000, 0x444444ff, 0x000000ff, 0x88ffff00, 0x212121ff, 0x00ff00ff, 0x0000ffff, 0x080808ff,
            0x1f1f1fff, 0x3f3f3fff, 0x5f5f5fff, 0x7f7f7fff, 0x9f9f9fff, 0xbfbfbfff, 0xdfdfdfff, 0xffffffff,
            0xa11616ff, 0x923535ff, 0xbe1111ff, 0xe21414ff, 0xb76363ff, 0xf43b3bff, 0xed8383ff, 0xe4a7a7ff,
            0xa35113ff, 0xa36b41ff, 0xc15b0fff, 0xe56d11ff, 0xcc9b75ff, 0xf68a39ff, 0xf1b283ff, 0xecc7abff,
            0x8a582cff, 0x937358ff, 0xa45e21ff, 0xc37027ff, 0xbea289ff, 0xdf8f47ff, 0xdeba9bff, 0xe2cdbbff,
            0xa8701eff, 0xb18b55ff, 0xc77f17ff, 0xed971bff, 0xddbc8bff, 0xfbaf3fff, 0xf7cd8fff, 0xf3dbb6ff,
            0x9f8810ff, 0xae9f4bff, 0xbca00cff, 0xdfbf0eff, 0xdccf85ff, 0xf2d536ff, 0xf1df81ff, 0xf0e7afff,
            0xa9a915ff, 0xc1c05bff, 0xc9c810ff, 0xeeee13ff, 0xf2f197ff, 0xfcfc3aff, 0xfcfb88ff, 0xfafab7ff,
            0x82a113ff, 0x9db252ff, 0x98be0fff, 0xb5e211ff, 0xcfe28cff, 0xcbf439ff, 0xdbf386ff, 0xe5f2b3ff,
            0x72a10dff, 0x90b049ff, 0x86be0aff, 0x9fe20cff, 0xc2de83ff, 0xb8f435ff, 0xcef27eff, 0xdcf1aeff,
            0x68a62aff, 0x8fb766ff, 0x73c51fff, 0x88ea25ff, 0xc1e59eff, 0xa1f946ff, 0xc9f79cff, 0xdaf5c0ff,
            0x269d16ff, 0x51a347ff, 0x24ba11ff, 0x2bdd14ff, 0x85cd7cff, 0x4ff13aff, 0x92ee86ff, 0xb6ebafff,
            0x269940ff, 0x56a167ff, 0x1cb53fff, 0x21d74bff, 0x8acd9aff, 0x43ec6bff, 0x95eaa9ff, 0xb8eac4ff,
            0x1ea574ff, 0x54af8eff, 0x16c385ff, 0x1ae89eff, 0x8adbbeff, 0x3ff8b6ff, 0x8ff4d0ff, 0xb6f1dcff,
            0x0d9d99ff, 0x41a6a3ff, 0x09bab6ff, 0x0bddd8ff, 0x78d1cfff, 0x34f1ecff, 0x7deeebff, 0xabedebff,
            0x1b819aff, 0x4a8e9eff, 0x1596b6ff, 0x18b1d9ff, 0x7eb9c9ff, 0x3dcaedff, 0x8bd7ebff, 0xb1dee9ff,
            0x16519dff, 0x386094ff, 0x115bbaff, 0x146cddff, 0x688cb9ff, 0x3a8bf1ff, 0x83b0ebff, 0xa9c3e5ff,
            0x131b9cff, 0x262c84ff, 0x0e19b9ff, 0x111edbff, 0x5156a4ff, 0x3844efff, 0x7d83e7ff, 0xa0a3deff,
            0x360a97ff, 0x3b1d7eff, 0x3d08b2ff, 0x4909d4ff, 0x64489fff, 0x6c33eaff, 0x9774e2ff, 0xaf9bdbff,
            0x5e179cff, 0x63328dff, 0x6b11b9ff, 0x8015dbff, 0x8c61b1ff, 0x9c3befff, 0xb983e9ff, 0xc6a7e2ff,
            0x871c9dff, 0x863f95ff, 0x9e15baff, 0xbb19ddff, 0xae6ebbff, 0xd13ef1ff, 0xda89ebff, 0xdcade5ff,
            0x9c117eff, 0x92327dff, 0xb90d94ff, 0xdb0fb0ff, 0xb762a5ff, 0xef37c8ff, 0xea7ed2ff, 0xe4a5d6ff,
            0x9a0e4aff, 0x8c2b55ff, 0xb60b54ff, 0xd90d64ff, 0xb05a7fff, 0xed3585ff, 0xe77aa9ff, 0xe1a2bdff,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    };
    public static final int[] ALT_PALETTE = {
            0x00000000, 0x444444FF, 0x000000FF, 0x88FFFF00, 0x212121FF, 0x00FF00FF, 0x0000FFFF, 0x0F0F0FFF,
            0x2B2B2BFF, 0x474747FF, 0x636363FF, 0x7F7F7FFF, 0x9B9B9BFF, 0xB7B7B7FF, 0xD3D3D3FF, 0xEFEFEFFF,
            0x170000FF, 0x370101FF, 0x570707FF, 0x771212FF, 0x972020FF, 0xB73232FF, 0xD74949FF, 0xF76363FF,
            0x17110DFF, 0x372B22FF, 0x57473BFF, 0x776558FF, 0x978679FF, 0xB7A99EFF, 0xD7CEC7FF, 0xF7F5F4FF,
            0x170B00FF, 0x371C04FF, 0x572F0CFF, 0x774519FF, 0x975C29FF, 0xB7763DFF, 0xD79155FF, 0xF7AF71FF,
            0x170E01FF, 0x372306FF, 0x573A0FFF, 0x77521CFF, 0x976C2DFF, 0xB78742FF, 0xD7A45CFF, 0xF7C379FF,
            0x171107FF, 0x372914FF, 0x574325FF, 0x775E3BFF, 0x977B54FF, 0xB79A71FF, 0xD7BB93FF, 0xF7DDB8FF,
            0x171401FF, 0x373006FF, 0x574C0FFF, 0x77691CFF, 0x97872DFF, 0xB7A542FF, 0xD7C45BFF, 0xF7E478FF,
            0x171708FF, 0x373718FF, 0x57572BFF, 0x777742FF, 0x97965DFF, 0xB7B67CFF, 0xD7D69FFF, 0xF7F6C6FF,
            0x15170BFF, 0x32371DFF, 0x4F5733FF, 0x6E774EFF, 0x8E976CFF, 0xAEB78EFF, 0xCFD7B5FF, 0xF1F7DFFF,
            0x121700FF, 0x2B3700FF, 0x455704FF, 0x60770DFF, 0x7C9719FF, 0x98B72AFF, 0xB6D73FFF, 0xD4F758FF,
            0x0F1700FF, 0x253700FF, 0x3C5700FF, 0x547708FF, 0x6E9713FF, 0x89B723FF, 0xA5D737FF, 0xC2F74EFF,
            0x13170EFF, 0x2E3726FF, 0x4C5741FF, 0x6B7760FF, 0x8D9783FF, 0xB1B7ABFF, 0xD6D7D6FF, 0xFEF7FFFF,
            0x001700FF, 0x053700FF, 0x0D5703FF, 0x18770CFF, 0x279718FF, 0x39B729FF, 0x4FD73EFF, 0x69F757FF,
            0x031707FF, 0x0A3715FF, 0x165725FF, 0x267738FF, 0x3A974FFF, 0x51B769FF, 0x6DD785FF, 0x8DF7A5FF,
            0x08170CFF, 0x17371EFF, 0x2A5734FF, 0x41774DFF, 0x5C9769FF, 0x7BB788FF, 0x9DD7AAFF, 0xC4F7D0FF,
            0x011710FF, 0x083726FF, 0x12573EFF, 0x207758FF, 0x329773FF, 0x48B78FFF, 0x62D7ADFF, 0x80F7CCFF,
            0x081717FF, 0x173736FF, 0x295756FF, 0x407776FF, 0x5B9795FF, 0x79B7B5FF, 0x9CD7D5FF, 0xC2F7F5FF,
            0x0A1517FF, 0x1C3237FF, 0x325057FF, 0x4B6E77FF, 0x698E97FF, 0x8BAEB7FF, 0xB1CFD7FF, 0xDAF1F7FF,
            0x001217FF, 0x002C37FF, 0x064757FF, 0x0F6277FF, 0x1D7F97FF, 0x2E9CB7FF, 0x44BAD7FF, 0x5ED8F7FF,
            0x000A17FF, 0x011937FF, 0x072A57FF, 0x113E77FF, 0x205497FF, 0x326CB7FF, 0x4887D7FF, 0x62A4F7FF,
            0x0D0E17FF, 0x232537FF, 0x3C3F57FF, 0x5A5D77FF, 0x7C7F97FF, 0xA1A4B7FF, 0xCBCCD7FF, 0xF8F8F7FF,
            0x050017FF, 0x0F0037FF, 0x1B0057FF, 0x2A0677FF, 0x3C1297FF, 0x5021B7FF, 0x6834D7FF, 0x814CF7FF,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
            0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    };
}
